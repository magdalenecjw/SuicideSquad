---
title: "Data Preparation"
author: "Suicide Squad"
date: 14 Feb 2023
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  warning: false
format: html
editor: visual
---

## Step-by-Step Data Preparation

### 1. Installing and launching required R packages

```{r}
pacman::p_load("tmap", "tidyverse")
```

### 2. Loading the data

```{r}
suicidedata <- list.files(path = "data",
                          pattern = "IHME-GBD_2019_DATA",
                          full.names = TRUE) %>%
  lapply(read_csv) %>%
  bind_rows

world_region <- read_csv("data/world-regions-according-to-the-world-bank.csv")
```

```{r}
str(suicidedata)
```

### 3. Data wrangling

-   Filter for "Self-harm"

-   Select relevant columns and arrange rows based on location_name

-   Pivot_wider by metric_name (number, percent, and rate)

-   Calculate the population size, death number and death rate

```{r}
suicidedata_mod <- suicidedata %>%
  filter(cause_name == "Self-harm") %>%
  arrange(location_name) %>%
  select(4,6,8,10,(12:14)) %>%
  pivot_wider(names_from = metric_name, values_from = val, names_glue = "suicide_{metric_name}") %>%
  mutate(population_size = suicide_Number/(suicide_Rate/100000),
         death_number = suicide_Number/suicide_Percent,
         death_rate = death_number/population_size*100000)
```

### 4. Matching country's name with region (*ISO 3166-1 alpha-3* country code

data)

Identify key differences

```{r}
suicide_vs_region <- setdiff(suicidedata_mod$location_name, world_region$Entity) %>%
  enframe(name = NULL, value = "desn") %>% 
  arrange(desn)
```

```{r}
unique(suicidedata_mod$location_name)
```

```{r}
#the list of countries in suicidedata_clean but not in world_map
suicide_vs_region  %>% 
  knitr::kable(caption = "Countries in suicide dataset vs. ISO3 regions: Coverage diff",
               row.names = TRUE)
```

#### 4.1 Changing the names of countries

Change the names of countries to match the two datasets

```{r}
suicidedata_cln_ctry <- suicidedata_mod %>%
  rename(country = location_name) %>%
  mutate(country = case_when(country == "Bolivia (Plurinational State of)" ~ "Bolivia",
                             country == "Brunei Darussalam" ~ "Brunei",
                             country == "Cabo Verde" ~ "Cape Verde",
                             country == "CÃ´te d'Ivoire" ~ "Cote d'Ivoire",
                             country == "Democratic People's Republic of Korea" ~ "North Korea",
                             country == "Democratic Republic of the Congo" ~ "Democratic Republic of Congo",
                             country == "Iran (Islamic Republic of)" ~ "Iran",
                             country == "Lao People's Democratic Republic" ~ "Laos",
                             country == "Micronesia (Federated States of)" ~ "Micronesia",
                             country == "Republic of Korea" ~ "South Korea",
                             country == "Republic of Moldova" ~ "Moldova",
                             country == "Russian Federation" ~ "Russia",
                             country == "Syrian Arab Republic" ~ "Syria",
                             country == "Taiwan (Province of China)" ~ "Taiwan",
                             country == "United Republic of Tanzania" ~ "Tanzania",
                             country == "Venezuela (Bolivarian Republic of)" ~ "Venezuela",
                             country == "Viet Nam" ~ "Vietnam",
                             TRUE ~ country))

world_region_cln <- world_region %>%
  rename(country = Entity) %>%
  mutate(country = case_when(country == "Timor" ~ "Timor-Leste",
                             country == "United States" ~ "United States of America",
                             TRUE~country))

### Progress check
setdiff(suicidedata_cln_ctry$country, world_region_cln$country)  %>% 
  enframe(name = NULL, value = "diff") %>% 
  knitr::kable(caption = "Remaining Cases", 
               row.names = TRUE)
```

Joining the two datasets

```{r}
suicidedata_cln = suicidedata_cln_ctry %>%
  left_join(world_region_cln, by = c('country' = 'country')) %>%
  select(!Year) %>%
  rename(code = Code,
         region = World_RegionbyWorld_Bank) %>%
  relocate(code:region, .after = country)

suicidedata_cln
```

### 5. Preparing data for analysis

#### 5.1 Age-Standardized Rate (Total and Gender) - Anchor

```{r}
suicidedata_age_std <- suicidedata_cln %>%
  filter(age_name == "Age-standardized") %>%
  pivot_wider(names_from = sex_name,
              values_from = suicide_Rate) %>%
  select(c(1,2,3,6,12,13,14)) %>%
  rename("AS_SR" = "Both",
         "AS_SR_M" = "Male",
         "AS_SR_F" = "Female")
```

#### 5.2 Age-Group (Total)

-   young: age group 0 to 4 until age group 20 to 24,

-   econ_active: age group 25-29 until age group 60-64,

-   aged: age group 65 and above,

```{r}
suicide_number_age <- suicidedata_cln %>%
  filter(sex_name == "Both",
         !age_name %in% c("All ages", "Age-standardized")) %>%
  select(c(2,5,7,8)) %>%
  pivot_wider(names_from = age_name,
              values_from = suicide_Number) %>%
  mutate(young_SN = rowSums(.[3:5]),
         econ_active_SN = rowSums(.[6:13]),
         aged_SN = rowSums(.[14:18]),
         total_SN = young_SN+econ_active_SN+aged_SN) %>%
  select(c(1,2,19,20,21,22))
```

#### 5.3 Population Size Age-Group

```{r}
pop_size_age <- suicidedata_cln %>%
  filter(sex_name == "Both",
         !age_name %in% c("All ages", "Age-standardized")) %>%
  select(c(2,5,7,11)) %>%
  pivot_wider(names_from = age_name,
              values_from = population_size) %>%
  mutate(young_pop = rowSums(.[3:5]),
         econ_active_pop = rowSums(.[6:13]),
         aged_pop = rowSums(.[14:18]),
         total_pop = young_pop+econ_active_pop+aged_pop) %>%
  select(c(1,2,19,20,21,22))
```

From above, we can calculate suicide rate for young, econ_active, and aged by dividing SN by population \* 100,000

Do we need to do per gender as well?

#### 5.4 GDP per capita

Reference - https://ourworldindata.org/grapher/gdp-per-capita-worldbank?tab=chart

```{r}
gdp_per_capita <- read_csv("data/gdp-per-capita-worldbank.csv")
```

```{r}
gdp_per_capita <- gdp_per_capita %>%
  select(2,3,4) %>%
  rename("code" = "Code",
         "year" = "Year",
         "gdp_per_capita" = "GDP per capita, PPP (constant 2017 international $)") %>%
  na.omit()
```

#### 5.5 Human Development Index

Reference - https://ourworldindata.org/grapher/human-development-index

```{r}
hdi <- read_csv("data/human-development-index.csv")
```

```{r}
hdi <- hdi %>%
  select(2,3,4) %>%
  rename("code" = "Code",
         "year" = "Year",
         "hdi" = "Human Development Index") %>%
  na.omit()
```

#### 5.6 Depression Prevalence

Reference - https://ourworldindata.org/grapher/suicide-rates-vs-prevalence-of-depression

```{r}
depr <- read_csv("data/suicide-rates-vs-prevalence-of-depression.csv")
```

```{r}
depr <- depr %>%
  select(2,3,5) %>%
  rename("code" = "Code",
         "year" = "Year",
         "depr_rate" = "Prevalence - Depressive disorders - Sex: Both - Age: Age-standardized (Rate)") %>%
  filter(year %in% (1990:2019)) %>%
  na.omit()
```

#### 5.7 Income Inequality

Reference - https://ourworldindata.org/grapher/suicide-rate-vs-income-inequality

```{r}
gini <- read_csv("data/suicide-rate-vs-income-inequality.csv")
```

```{r}
gini <- gini %>%
  select(2,3,5) %>%
  rename("code" = "Code",
         "year" = "Year",
         "gini" = "Gini coefficient") %>%
  filter(year %in% (1990:2019)) %>%
  na.omit()
```

#### 5.8 Violent Death

Reference - https://ourworldindata.org/grapher/suicide-vs-violent-deaths

```{r}
violent <- read_csv("data/suicide-vs-violent-deaths.csv")
```

```{r}
violent <- violent %>%
  select(2,3,5) %>%
  rename("code" = "Code",
         "year" = "Year",
         "violent_death_rate" = "Deaths - All forms of violence - OWID - Sex: Both - Age: Age-standardized (Rate)") %>%
  filter(year %in% (1990:2019)) %>%
  na.omit()
```

FEEL FREE TO ADD SOMEMORE

#### 5.8 Joining

```{r}

suicidedata_complete <- left_join(suicidedata_age_std, suicide_number_age, by = c('code' = 'code', 'year' = 'year')) %>% 
  
  left_join(., pop_size_age, by = c('code' = 'code', 'year' = 'year')) %>%
  
  mutate(young_SR = young_SN*100000/young_pop,
         econ_active_SR = econ_active_SN*100000/econ_active_pop,
         aged_SR = aged_SN*100000/aged_pop) %>%
  
  left_join(., gdp_per_capita, by = c('code' = 'code', 'year' = 'year')) %>%
  
  left_join(., hdi, by = c('code' = 'code', 'year' = 'year')) %>%
  
  left_join(., depr, by = c('code' = 'code', 'year' = 'year')) %>%
  
  left_join(., gini, by = c('code' = 'code', 'year' = 'year')) %>%
  
  left_join(., violent, by = c('code' = 'code', 'year' = 'year')) 

knitr::kable(head(suicidedata_complete))
```

### 6. Joining with world map

The object `World` is a spatial object of class `sf` from the [sf package](https://cran.r-project.org/package=sf); it is a `data.frame` with a special column that contains a geometry for each row, in this case polygons

Reference - https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html

```{r}
#data("World")
```

Joining the two dataframes together

```{r}
#suicidedata_join_map <- right_join(World, suicidedata_cln,
#                          by = c("iso_a3" = "code")) 

#suicidedata_cln_map <-  suicidedata_join_map %>%
#  select(!c(2,3,4,6,7,8,9,10,11,12,13,14,15)) %>%
#  mutate(area = as.numeric(str_remove(`area`, 
#                                " \\[km\\^2\\]")), 
#         .after = region)
```

```{r}
#tm_shape(suicidedata_cln_map) +
#    tm_polygons("area")
```

Ignore below

#rworldmap - Example code below

#https://cran.r-project.org/web/packages/rworldmap/vignettes/rworldmap.pdf

```{r}
#suicidedata_cln_map <- joinCountryData2Map(suicidedata_cln_region,
#                                 joinCode = "ISO3",
#                                 nameJoinColumn = "code")
```

#Other References using typical world map - https://rpubs.com/Thom_JH/798825
