---
title: "EDA: Overview of Suicide Rate in a Particular Year"
author: "Michael"
date: 03 Mar 2023
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  warning: false
format: html
editor: visual
---

## Step-by-Step Data Preparation

### 1. Installing and launching required R packages

```{r}
pacman::p_load("tmap", "ExPanDaR", "kableExtra", "ggstatsplot", "tidyverse")
```

### 2. Loading the data

```{r}
suicidedata_eda_formap <- read_csv("data/suicidedata_eda_formap.csv", show_col_types = FALSE)
```

```{r}
suicidedata_eda <- read_csv("data/suicidedata_eda.csv", show_col_types = FALSE)
```

### 3. Dataset overview
We will check the suicidedata_eda as suicidedata_eda_formap is meant to be combined with the sf file (world)

#### 3.1 Missing Values
```{r}
missing.values <- suicidedata_eda %>%
    gather(key = "key", value = "val") %>%
    mutate(is.missing = is.na(val)) %>%
    group_by(key, is.missing) %>%
    summarise(num.missing = n()) %>%
    filter(is.missing==T) %>%
    select(-is.missing) %>%
    arrange(desc(num.missing)) 
missing.values %>% kable()
```

Visualising Missing Values
By country
```{r}
#| fig-height: 15
#| fig-width: 10
prepare_missing_values_graph(suicidedata_eda, ts_id = "country")
```

By gender
```{r}
prepare_missing_values_graph(suicidedata_eda, ts_id = "sex_name")
```

By age group
```{r}
prepare_missing_values_graph(suicidedata_eda, ts_id = "age_name")
```

By year
```{r}
prepare_missing_values_graph(suicidedata_eda, ts_id = "year")
```
Conclusion : The missing values are because of age-standardised (only for Suicide Rates)

#### 3.2 Descriptive statistics

```{r}
descr_stats <- function(year, gender = "Both", age = "All ages") {
  
  descr <- prepare_descriptive_table(suicidedata_eda %>%
                                       filter(year == year,
                                              sex_name == gender,
                                              age_name == age) %>%
                                       select(!c(6,8)) %>%
                                       rename("Number of suicide" = "SN",
                                              "Number of deaths" = "DN",
                                              "Share of deaths from suicide (%)" = "SP",
                                              "Suicide rate" = "SR",
                                              "Mortality rate" = "DR"))
descr$kable_ret  %>%
  kable_styling("condensed", full_width = F, position = "center")
}
```

```{r}
descr_stats(2010, "Both", "All ages")
```


### 4. Plotting the choropleth map
#### 4.1 Joining with world map (tmap object)

The object `World` is a spatial object of class `sf` from the [sf package](https://cran.r-project.org/package=sf); it is a `data.frame` with a special column that contains a geometry for each row, in this case polygons

Reference - https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html

```{r}
data("World")
```

Joining the two dataframes together

```{r}
suicidedata_eda_map <- left_join(World, 
                                 suicidedata_eda_formap %>% mutate(across(where(is.numeric), round, 2)),
                          by = c("iso_a3" = "code")) %>%
  select(!c(2,3,4,6,7,8,9,10,11,12,13,14,15)) %>%
  mutate(area = as.numeric(str_remove(`area`, 
                                " \\[km\\^2\\]")), 
         .after = region) %>%
  na.omit()
```


Creating a function to plot

```{r}
plot_map_eda <- function(year, metric = "SR", gender = "T", style = "jenks"){
  
metric_text = case_when(metric == "SR" ~ "Suicide rate",
                        metric == "SP" ~ "Share of deaths from suicide (%)",
                        metric == "SN" ~ "Number of suicide",
                        metric == "DN" ~ "Number of deaths",
                        metric == "DR" ~ "Mortality rate")

age = case_when(metric == "SR" ~ "AS",
                metric == "SP" ~ "All",
                metric == "SN" ~ "All",
                metric == "DN" ~ "All",
                metric == "DR" ~ "All")

gender_text = case_when(gender == "T" ~ "Total",
                        gender == "M" ~ "Male",
                        gender == "F" ~ "Female")
  
tmap_mode("view")

tm_shape(suicidedata_eda_map |> 
           filter(year == year))+
  tm_fill(paste0(metric,"_",age,"_",gender), 
          style = style, 
          palette="YlOrBr", 
          id = "country",
          title = paste0(metric_text, ", ",gender_text,", ", year),
          popup.vars = c(value = paste0(metric,"_",age,"_",gender))) +
  
  tm_borders(col = "grey20",
             alpha = 0.5) 
}

```

```{r}
plot_map_eda(2016, "SR", "M", "jenks")
tmap_mode("plot")
```

