---
title: "EDA: Overview of Suicide Rate in a Particular Year"
author: "Michael"
date: 03 Mar 2023
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  warning: false
format: html
editor: visual
toc-depth: 5
---

## Step-by-Step Data Preparation

### 1. Installing and launching required R packages

```{r}
pacman::p_load("patchwork", "tmap", "ExPanDaR", "kableExtra", "ggstatsplot", "plotly", "DT", "tidyverse")
```

### 2. Loading the data

```{r}
suicidedata_eda_formap <- read_csv("data/suicidedata_eda_formap.csv", show_col_types = FALSE)
```

```{r}
suicidedata_eda <- read_csv("data/suicidedata_eda.csv", show_col_types = FALSE)
```

### 3. Dataset overview

We will check the suicidedata_eda as suicidedata_eda_formap is meant to be combined with the sf file (world)

#### 3.1 Missing Values

```{r}
missing.values <- suicidedata_eda %>%
    gather(key = "key", value = "val") %>%
    mutate(is.missing = is.na(val)) %>%
    group_by(key, is.missing) %>%
    summarise(num.missing = n()) %>%
    filter(is.missing==T) %>%
    select(-is.missing) %>%
    arrange(desc(num.missing)) 
missing.values %>% kable()
```

Visualising Missing Values

```{r}
missing_values <- function(vari = "age_name"){
prepare_missing_values_graph(suicidedata_eda, ts_id = vari)
}
```

By country

```{r}
#| fig-height: 15
#| fig-width: 10
missing_values("country")
```

By gender

```{r}
missing_values("sex_name")
```

By age group

```{r}
missing_values("age_name")
```

By year

```{r}
missing_values("year")
```

Conclusion : The missing values are because of age-standardised (only for Suicide Rates)

#### 3.2 Descriptive statistics

```{r}
descr_stats <- function(gender = "Both", age = "All ages") {
  
  descr <- prepare_descriptive_table(suicidedata_eda %>%
                                       filter(sex_name == gender,
                                              age_name == age) %>%
                                       select(!c(6,8)) %>%
                                       rename("Number of suicide" = "SN",
                                              "Number of deaths" = "DN",
                                              "Share of deaths from suicide (%)" = "SP",
                                              "Suicide rate" = "SR",
                                              "Mortality rate" = "DR"))
descr$kable_ret  %>%
  kable_styling("condensed", full_width = F, position = "center")
}
```

```{r}
descr_stats("Both", "All ages")
```

#### 3.3 Distribution

##### 3.3.1 Histogram of multiple variables

```{r}
plot_multi_distribution <- function(gender = "Both", age = "All ages") {
  
suicidedata_hist <- suicidedata_eda %>% 
  filter(sex_name == gender,
         age_name == age) %>%
  select(c(7,9,10,11,12)) %>%
  rename("Number of suicide" = "SN",
         "Number of deaths" = "DN",
         "Share of deaths from suicide (%)" = "SP",
         "Suicide rate" = "SR",
         "Mortality rate" = "DR")
  
plot <- suicidedata_hist %>% 
  gather() %>%
  ggplot(aes(value)) +
  facet_wrap( ~key, ncol=3, scales="free") +
  geom_histogram()

ggplotly(plot)
}
```

```{r}
plot_multi_distribution("Both", "All ages")
```

It does not make sense to look at numbers due to different population sizes. Hence we will only look at Suicide Rate, Mortality Rate and Share of deaths from suicide (%) from now on

##### 3.3.2 Histogram of individual variables

```{r}
plot_distribution <- function(gender = "Both", age = "All ages", vari = SR, title = "Suicide Rate", binwidth = 2) {
  
suicidedata_hist <- suicidedata_eda %>% 
  filter(sex_name == gender,
         age_name == age)

suicidedata_summary <- suicidedata_hist %>%
  summarise(mean = round(mean({{vari}})),
            median = round(median({{vari}})),
            ymax = as.numeric(round((IQR({{vari}})*1.5) + quantile({{vari}},0.75))),
            ymin = as.integer(min({{vari}})),
            rangemax = as.integer(max({{vari}}))) 

#computing summary statistics of mean, median and lower and upper whiskers in boxplot
var_mean <- suicidedata_summary$mean
var_median <- suicidedata_summary$median
ymax <- suicidedata_summary$ymax
ymin <- suicidedata_summary$ymin
rangemax <- suicidedata_summary$rangemax

#plotting histogram
h1 <- ggplot(suicidedata_hist, aes(x = {{vari}})) + 
  geom_histogram(color="black", fill="azure4", binwidth = binwidth)  
  
h <- h1 + scale_x_continuous(limits = c(0,rangemax), labels = scales::comma) +
  labs(x = paste0(title,", ",gender,", ",age), y = "Count") +
  geom_vline(aes(xintercept = var_mean), col="darkblue", linewidth=1, linetype = "dashed") +
  annotate("text", x=var_mean*1.05, y=max(ggplot_build(h1)$data[[1]]$count)*1.2, label="Mean:", 
           size=4, color="darkblue", hjust = 0) +
  annotate("text", x=var_mean*1.05, y=max(ggplot_build(h1)$data[[1]]$count)*1.1, label=format(var_mean, big.mark = ","),
           size=4, color="darkblue", hjust = 0) +
  geom_vline(aes(xintercept = var_median), col="lightpink4", linewidth=1, linetype = "dashed") +
  annotate("text", x=var_median*0.95, y=max(ggplot_build(h1)$data[[1]]$count)*1.2, label="Median:", 
           size=4, color="lightpink4", hjust = 1) +
  annotate("text", x=var_median*0.95, y=max(ggplot_build(h1)$data[[1]]$count)*1.1, label=format(var_median, big.mark = ","),
           size=4, color="lightpink4", hjust = 1) +
  theme(axis.text.x = element_text(size=8))

#plotting boxplot
b <- ggplot(suicidedata_hist, aes(y = {{vari}})) + 
  geom_boxplot(outlier.colour="firebrick", outlier.shape=16,
               outlier.size=1, notch=FALSE) + 
  coord_flip() + labs(y = "", x = "") + 
  scale_y_continuous(limits = c(0,rangemax), labels = scales::comma) +
  theme(axis.text = element_blank(), axis.ticks = element_blank()) + 
  stat_boxplot(geom="errorbar", width=0.5) +
  annotate("text", x=0.35, y=ymax, label=format(ymax, big.mark = ","), 
           size=3, color="lightpink4") +
  annotate("text", x=0.35, y=ymin, label=format(ymin, big.mark = ","), 
           size=3, color="lightpink4")

#combining plots
suicide_distri <- b / h + plot_layout(heights = c(1, 4)) 

suicide_distri
}

```

```{r}
plot_distribution("Both", "All ages", SR, "Suicide Rate", 2)
```

#### 3.4 Outliers

```{r}
outliers_table <- function(gender = "Both", age = "All ages", vari = "Suicide rate") {
  
  outliers <- prepare_ext_obs_table(suicidedata_eda %>%
                                       filter(sex_name == gender,
                                              age_name == age) %>%
                                      select(!c(2,3,4,5)) %>%
                                      rename("Share of deaths from suicide (%)" = "SP",
                                             "Suicide rate" = "SR",
                                             "Mortality rate" = "DR"),
                                    n = 10,
                                    cs_id = "country",
                                    ts_id = "year",
                                    var = vari)
    
outliers$kable_ret  %>%
  kable_styling("condensed", full_width = F, position = "center")
}
```

```{r}
outliers_table("Both", "All ages", "Suicide rate")
```

More outliers on the high-end as compared to the other side with Greenland dominating the outliers. There might be interesting pattern here, hence windsorising the data using `treat_outliers()` function might not be recommended

### 4. Comparing between regions within particular period

#### 4.1 Plotting the choropleth map

##### 4.1.1 Joining with world map (tmap object)

The object `World` is a spatial object of class `sf` from the [sf package](https://cran.r-project.org/package=sf); it is a `data.frame` with a special column that contains a geometry for each row, in this case polygons

Reference - https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html

```{r}
data("World")
```

Joining the two dataframes together

```{r}
suicidedata_eda_map <- left_join(World, 
                                 suicidedata_eda_formap %>% mutate(across(where(is.numeric), round, 2)),
                          by = c("iso_a3" = "code")) %>%
  select(!c(2,3,4,6,7,8,9,10,11,12,13,14,15)) %>%
  mutate(area = as.numeric(str_remove(`area`, 
                                " \\[km\\^2\\]")), 
         .after = region) %>%
  na.omit()
```

##### 4.1.2 Creating function to plot choropleth map

```{r}
plot_map_eda <- function(period, metric = "SR", gender = "T", style = "jenks"){
  
metric_text = case_when(metric == "SR" ~ "Suicide rate",
                        metric == "SP" ~ "Share of deaths from suicide (%)",
                        metric == "SN" ~ "Number of suicide",
                        metric == "DN" ~ "Number of deaths",
                        metric == "DR" ~ "Mortality rate")

age = case_when(metric == "SR" ~ "AS",
                metric == "SP" ~ "All",
                metric == "SN" ~ "All",
                metric == "DN" ~ "All",
                metric == "DR" ~ "All")

gender_text = case_when(gender == "T" ~ "Total",
                        gender == "M" ~ "Male",
                        gender == "F" ~ "Female")
  
tmap_mode("view")

tm_shape(suicidedata_eda_map |> 
           filter(year == period))+
  tm_fill(paste0(metric,"_",age,"_",gender), 
          style = style, 
          palette="YlOrBr", 
          id = "country",
          title = paste0(metric_text, ", ",gender_text,", ", period),
          popup.vars = c(value = paste0(metric,"_",age,"_",gender))) +
  
  tm_borders(col = "grey20",
             alpha = 0.5) 
}

```

```{r}
plot_map_eda(2016, "SR", "M", "jenks")
tmap_mode("plot")
```

#### 4.2 Statistical testing on difference in suicide metrics between Regions

Note that it does not make sense to perform the statistical testing between countries within a fixed particular period. Hence, statistical test will be done to check whether there are changes in the metric of particular country across time period (in EDA Time Series segment)

##### 4.2.1.1 Normality assumption

Plotting histogram by regions

```{r}
plot_multi_distribution_region <- function(period1, period2, gender = "Both", age = "All ages", vari = SR) {
  
suicidedata_hist <- suicidedata_eda %>% 
  filter(year >= period1 & year <= period2,
         sex_name == gender,
         age_name == age) %>%
  select(c(3,7,8,9,10,11,12))
  
plot <- suicidedata_hist %>% 
  ggplot(aes(x = {{vari}})) +
  facet_wrap( ~region, ncol=4, scales="free") +
  geom_histogram()

ggplotly(plot)
}
```

```{r}
plot_multi_distribution_region(2000, 2015, "Both", "All ages", SR)
```

Anderson-Darling Test by Region

```{r}
adtest_region <- function(period1, period2, gender = "Both", age = "All ages", vari = "SR") {

suicidedata_ad <- suicidedata_eda %>% 
  filter(year >= period1 & year <= period2,
         sex_name == gender,
         age_name == age) %>%
  select(c(3,7,8,9,10,11,12))
    
normaltestlist <- list()
for (i in unique(suicidedata_ad$region)){
  subdf <- subset(x = suicidedata_ad, subset=region==i)
  normaltestlist[[i]] <- nortest::ad.test(subdf[[vari]])
}

normaltest <- tibble(Region = unique(suicidedata_ad$region),
                     p_value = unlist(lapply(normaltestlist, `[[`, 2))) 

names(normaltest)[2] <- paste0(vari, " p-value")

DT::datatable(normaltest, class= "compact")
}
```

```{r}
adtest_region(2000, 2015, "Both", "All ages", "SR")
```

##### 4.2.1.2 ANOVA Test

```{r}
plot_ANOVA_region <- function(period1, period2, gender = "Both", age = "All ages", vari = SR, title = "Suicide rate", type = "np", conf = 0.95) {

text <- case_when(type == "p" ~ "Mean",
                  type == "np" ~ "Median" )
    
suicidedata_ANOVA <- suicidedata_eda %>% 
  filter(year >= period1 & year <= period2,
         sex_name == gender,
         age_name == age) %>%
  select(c(3,7,8,9,10,11,12))

suicidedata_ANOVA %>% ggbetweenstats(x = region, y = {{vari}},
               xlab = "Region", ylab = title,
               type = type, pairwise.comparisons = T, pairwise.display = "ns", 
               mean.ci = T, p.adjust.method = "fdr",  conf.level = conf,
               title = paste0("Comparison of ",text," ",title, " (", gender, " gender, ", age, ") across Regions from ", period1, " to ", period2),
               subtitle = paste0("One-way ANOVA at ", conf*100, "% confidence level"),
               package = "ggthemes", palette = "Tableau_10")

}

```

```{r}
#| fig-height: 8
#| fig-width: 10
plot_ANOVA_region(2000, 2015, "Both", "Age-standardized", SR, type = "np")
```
By Countries

```{r}
plot_ANOVA_country <- function(period1, period2, gender = "Both", age = "All ages", countrylist, vari = SR, title = "Suicide rate", type = "np", conf = 0.95) {

text <- case_when(type == "p" ~ "Mean",
                  type == "np" ~ "Median" )
    
suicidedata_ANOVA <- suicidedata_eda %>% 
  filter(year >= period1 & year <= period2,
         sex_name == gender,
         age_name == age,
         country %in% countrylist) %>%
  select(c(1,7,8,9,10,11,12))

suicidedata_ANOVA %>% ggbetweenstats(x = country, y = {{vari}},
               xlab = "Countries", ylab = title,
               type = type, pairwise.comparisons = T, pairwise.display = "ns", 
               mean.ci = T, p.adjust.method = "fdr",  conf.level = conf,
               title = paste0("Comparison of ",text," ",title, " (", gender, " gender, ", age, ") across Countries from ", period1, " to ", period2),
               subtitle = paste0("One-way ANOVA at ", conf*100, "% confidence level"),
               package = "ggthemes", palette = "Tableau_10")

}

```

```{r}
#| fig-height: 8
#| fig-width: 10
plot_ANOVA_country(2000, 2015, "Both", "Age-standardized", c("China", "Japan", "Singapore", "Greenland", "Indonesia"),SR, type = "np")
```
Number of data is very small when compared across countries. Hence this will not go to Shiny App


### 5. Comparing population groups in a country within a particular period

#### 5.1 Plotting the suicide metrics pyramid

```{r}
plot_pyramid <- function(period, location, vari = SR, varilabel = "Suicide Rate"){

suicidedata_pyramid <- suicidedata_eda %>%
  filter(sex_name %in% c("Male", "Female"),
         age_name %in% c("10-14", "15-24", "25-44", "45-64", "65-74", "75+"),
         year == period,
         country == location) %>%
  mutate(SN = round(ifelse(sex_name == "Male", SN*(-1), SN), 0),
         DN = round(ifelse(sex_name == "Male", DN*(-1), DN), 0),
         SP = round(ifelse(sex_name == "Male", SP*(-1), SP), 2),
         SR = round(ifelse(sex_name == "Male", SR*(-1), SR), 2),
         DR = round(ifelse(sex_name == "Male", DR*(-1), DR), 2),
         age_name = factor(age_name, levels = c("10-14", "15-24", "25-44", "45-64", "65-74", "75+"))) %>%
  rename(Age = age_name,
         Gender = sex_name)

suicidedata_pyramid_summary <- suicidedata_pyramid %>%
  summarise(max = max(abs({{vari}}))) 

#computing summary statistics of mean, median and lower and upper whiskers in boxplot
max_limit <- suicidedata_pyramid_summary$max
interval <- suicidedata_pyramid_summary$max/2
tickvals <- seq(-max_limit, max_limit, interval)
ticktext <- c(as.character(max_limit), as.character(interval), "0", as.character(interval), as.character(max_limit))

p <- suicidedata_pyramid %>%
  ggplot(aes(x = Age,
             y = {{vari}}, 
             fill = Gender,
             text = paste(varilabel, ":", abs({{vari}})))) +
  geom_col() +
  coord_flip() +
  labs (x = varilabel, title=paste0(varilabel,' by Gender and Age Group, ',location, ", ",period )) +
  theme_bw() +
  theme(axis.ticks.y = element_blank(),
        axis.title.y = element_blank()) +
  scale_fill_manual(values = c("Male" = "lightblue", "Female" = "lightpink")) 

ggplotly(p,session="knitr", tooltip = c("x", "fill", "text")) %>%
  
  layout(xaxis = list(title = varilabel,
                      tickmode = 'array', 
                      tickvals = tickvals,
                      ticktext = ticktext))
}
```

```{r}
plot_pyramid(2010, "China", SR, "Suicide Rate")
```

#### 5.2 Statistical testing on difference in suicide metrics between population structure of a country

##### 5.2.1 Normality assumption

Plotting histogram by population structure

```{r}
plot_multi_distribution_pop <- function(period1, period2, location, xvari = SR, gridvari) {
  
suicidedata_hist <- suicidedata_eda %>% 
  filter(year >= period1 & year <= period2,
         sex_name %in% c("Male", "Female"),
         age_name %in% c("10-14", "15-24", "25-44", "45-64", "65-74", "75+"),
         country == location) 
  
plot <- suicidedata_hist %>% 
  ggplot(aes(x = {{xvari}})) +
  facet_grid(cols = vars({{gridvari}}), scales = "free") +
  geom_histogram()

ggplotly(plot)
}
```

```{r}
plot_multi_distribution_pop(2000, 2015, "China", SR, gridvari=sex_name)
```

Anderson-Darling Test by Gender

```{r}
adtest_gender <- function(period1, period2, location, vari = "SR") {

suicidedata_ad <- suicidedata_eda %>% 
  filter(year >= period1 & year <= period2,
         sex_name %in% c("Male", "Female"),
         age_name %in% c("10-14", "15-24", "25-44", "45-64", "65-74", "75+"),
         country == location) 
    
normaltestlist <- list()
for (i in unique(suicidedata_ad$sex_name)){
  subdf <- subset(x = suicidedata_ad, subset=sex_name==i)
  normaltestlist[[i]] <- nortest::ad.test(subdf[[vari]])
}

normaltest <- tibble(Gender = unique(suicidedata_ad$sex_name),
                     p_value = unlist(lapply(normaltestlist, `[[`, 2))) 

names(normaltest)[2] <- paste0(vari, " p-value")

DT::datatable(normaltest, class= "compact")
}
```

```{r}
adtest_gender(2000, 2015, "China", "SR")
```


Anderson-Darling Test by Age

```{r}
adtest_age <- function(period1, period2, location, vari = "SR") {

suicidedata_ad <- suicidedata_eda %>% 
  filter(year >= period1 & year <= period2,
         sex_name %in% c("Male", "Female"),
         age_name %in% c("10-14", "15-24", "25-44", "45-64", "65-74", "75+"),
         country == location) 
    
normaltestlist <- list()
for (i in unique(suicidedata_ad$age_name)){
  subdf <- subset(x = suicidedata_ad, subset=age_name==i)
  normaltestlist[[i]] <- nortest::ad.test(subdf[[vari]])
}

normaltest <- tibble(`Age Group` = unique(suicidedata_ad$age_name),
                     p_value = unlist(lapply(normaltestlist, `[[`, 2))) 

names(normaltest)[2] <- paste0(vari, " p-value")

DT::datatable(normaltest, class= "compact")
}
```

```{r}
adtest_age(2000, 2015, "China", "SR")
```

##### 5.2.2 ANOVA Test

```{r}
plot_ANOVA_pop <- function(period1, period2, location, xvari, yvari = SR, xlabel, ylabel = "Suicide rate", type = "np", conf = 0.95) {

text <- case_when(type == "p" ~ "Mean",
                  type == "np" ~ "Median" )
    
suicidedata_ANOVA <- suicidedata_eda %>% 
  filter(year >= period1 & year <= period2,
         sex_name %in% c("Male", "Female"),
         age_name %in% c("10-14", "15-24", "25-44", "45-64", "65-74", "75+"),
         country == location)

suicidedata_ANOVA %>% ggbetweenstats(x = {{xvari}}, y = {{yvari}},
               xlab = xlabel, ylab = ylabel,
               type = type, pairwise.comparisons = T, pairwise.display = "ns", 
               mean.ci = T, p.adjust.method = "fdr",  conf.level = conf,
               title = paste0("Comparison of ",text," ",ylabel, " between ", xlabel, " in ",location, " from ", period1, " to ", period2),
               subtitle = paste0("One-way ANOVA at ", conf*100, "% confidence level"),
               package = "ggthemes", palette = "Tableau_10")

}

```

```{r}
#| fig-height: 8
#| fig-width: 10
plot_ANOVA_pop(2000, 2015, "China", xvari = age_name, yvari = SR, xlabel = "Age Group", ylabel = "Suicide rate", type = "np")
```



